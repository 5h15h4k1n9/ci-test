name: Update versions
description: Replaces %CURRENT_VERSION% string in every source file with the current version
inputs:
  version:
    description: 'The version of the release'
    required: false
    default: "$VERSION"
  branch-name:
    description: 'The branch name'
    required: false
    default: "$BRANCH_NAME"
  user-token:
    description: 'The user token'
    required: true
  repository:
    description: 'The repository to push the changes to'
    required: false
    default: ${{ github.repository }}

runs:
  using: 'composite'
  steps:
    - name: Get files with changes needed
      id: get-files
      shell: bash
      run: |
        set +e
        result=$(grep -rn "%CURRENT_VERSION%" ./src >> files.txt)
        exit_code=$?
        set -e
      
        if [ $exit_code -eq 1 ]; then
          echo -e "\n\e[33mNo files with changes found\e[0m"
        fi
      
        echo "EXIT_CODE=$exit_code" >> "$GITHUB_OUTPUT"

    - name: Replace version
      if: steps.get-files.outputs.exit_code == 0
      shell: bash
      run: find ./src -type f -exec sed -i "s/%CURRENT_VERSION%/${{ inputs.version }}/g" {} +

    - name: Commit and push changes
      if: steps.get-files.outputs.exit_code == 0
      shell: bash
      run: |
        git checkout ${{ inputs.branch-name }}
        git add ./src
        git commit -m "release: Update version to ${{ inputs.version }}"
        git push https://x-access-token:${{ inputs.user-token }}@github.com/${{ inputs.repository }}.git ${{ inputs.branch-name }}

    - name: Log change files
      shell: bash
      run: |
        echo -e "\n\e[33mFiles with changes:"
        cat files.txt
        echo -e "\e[0m"