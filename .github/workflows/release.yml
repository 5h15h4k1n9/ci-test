name: Release Automation

on:
  release:
    types:
      - created

permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and test
        uses: ./.github/actions/build-and-test
        with:
          distribution: 'adopt-openj9'
          java-version: '17'
          architecture: 'x64'

  publish-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        uses: ./.github/actions/configure-git
        with:
          user-name: ${{ secrets.USER_NAME }}
          user-mail: ${{ secrets.USER_MAIL }}

      - name: Extract versions
        uses: ./.github/actions/extract-version
        with:
          tag-name: ${{ github.event.release.tag_name }}

      - name: Get branch
        run: |
          if [[ $VERSION =~ ^[0-9]+\.[0-9]+\.0$ ]]; then
              BRANCH=master
          else
              BRANCH=patch/$PATCH_BRANCH_NAME
          fi
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Update version
        run: |
          git checkout ${{ env.BRANCH }}
          sed -i "s/version = \"[0-9.]*\"/version = \"$VERSION\"/" build.gradle.kts
          sed -i "s/ARG VERSION=[0-9.]*/ARG VERSION=$VERSION/" Dockerfile
          if [[ $(git diff --quiet; echo $?) == 1 ]]; then
              git add build.gradle.kts Dockerfile
              git commit -m "release: $VERSION"
              git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git ${{ env.BRANCH }}
          fi

      - name: Create branches
        run: |
          if [[ $BRANCH == "master" ]]; then
            git checkout -b release/$VERSION
            git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git release/$VERSION
        
            git checkout -b patch/$PATCH_BRANCH_NAME
            sed -i "s/version = \"[0-9.]*\"/version = \"$PATCH_BRANCH_NAME-patch\"/" build.gradle.kts
            sed -i "s/ARG VERSION=[0-9.]*/ARG VERSION=$PATCH_BRANCH_NAME-patch/" Dockerfile
            if [[ $(git diff --quiet; echo $?) == 1 ]]; then
              git add build.gradle.kts Dockerfile
              git commit -m "patch: $PATCH_BRANCH_NAME"
              git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git patch/$PATCH_BRANCH_NAME
            fi
        
            git checkout master
            sed -i "s/version = \"[0-9.]*\"/version = \"$MINOR_VERSION\"/" build.gradle.kts
            sed -i "s/ARG VERSION=[0-9.]*/ARG VERSION=$MINOR_VERSION/" Dockerfile
            if [[ $(git diff --quiet; echo $?) == 1 ]]; then
              git add build.gradle.kts Dockerfile
              git commit -m "feature: $MINOR_VERSION"
              git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git $BRANCH
            fi
          else
            sed -i "s/version = \"[0-9.]*[a-z\-]*\"/version = \"$VERSION\"/" build.gradle.kts
            sed -i "s/ARG VERSION=[0-9.]*[a-z\-]*/ARG VERSION=$VERSION/" Dockerfile
            if [[ $(git diff --quiet; echo $?) == 1 ]]; then
              git add build.gradle.kts Dockerfile
              git commit -m "release: $VERSION"
              git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git $BRANCH
            fi
          
            git checkout -b release/$VERSION
            git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git release/$VERSION
            
            git checkout $BRANCH
            sed -i "s/version = \"[0-9.]*\"/version = \"$PATCH_BRANCH_NAME-patch\"/" build.gradle.kts
            sed -i "s/ARG VERSION=[0-9.]*/ARG VERSION=$PATCH_BRANCH_NAME-patch/" Dockerfile
            if [[ $(git diff --quiet; echo $?) == 1 ]]; then
              git add build.gradle.kts Dockerfile
              git commit -m "patch: $PATCH_BRANCH_NAME"
              git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git $BRANCH
            fi
          fi

  delete-release:
    needs:
      - build-and-test
      - publish-release
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Delete release
        uses: ./.github/actions/delete-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-id: ${{ github.event.release.id }}
          release-tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
#          BRANCH=$(echo ${{ github.event.bra }} | awk -F. '{print "release/"$1"."$2}')
#          echo "$GITHUB_ENV"

#      - name: Update version
#        run: |
#          sed -i "s/version = \"[0-9.]*\"/version = \"$VERSION\"/" build.gradle.kts
#          sed -i "s/ARG VERSION=[0-9.]*/ARG VERSION=$VERSION/" Dockerfile
#          git add build.gradle.kts
#          git commit -m "Release version $VERSION"
#          git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git ${{ steps.branch.outputs.branch }}


#  release:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Setup Git
#        run: |
#          git config --global user.name "${{ secrets.USER_NAME }}"
#          git config --global user.email "${{ secrets.USER_MAIL }}"
#
#      - name: Extract version from release tag
#        id: extract_version
#        run: |
#          TAG_NAME=${{ github.event.release.tag_name }}
#          VERSION=${TAG_NAME//-SNAPSHOT/}
#          echo "VERSION=$VERSION" >> $GITHUB_ENV
#          PATCH_VERSION=$(echo $VERSION | awk -F. '{print $1"."$2"."$3+1}')
#          echo "PATCH_VERSION=$PATCH_VERSION" >> $GITHUB_ENV
#
#      - name: Update version in build.gradle.kts
#        run: |
#          sed -i "s/version = \"[0-9.]*-SNAPSHOT\"/version = \"$VERSION\"/" build.gradle.kts
#
#      - name: Commit and push release version
#        run: |
#          git checkout -b release/$VERSION
#          git add build.gradle.kts
#          git commit -m "Release version $VERSION"
#          git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git release/$VERSION
#
#      - name: Create next snapshot branch
#        run: |
#          sed -i "s/version = \"[0-9.]*\"/version = \"$PATCH_VERSION-SNAPSHOT\"/" build.gradle.kts
#          git checkout -b develop/$PATCH_VERSION-SNAPSHOT
#          git add build.gradle.kts
#          git commit -m "Prepare for next development iteration $PATCH_VERSION-SNAPSHOT"
#          git push https://x-access-token:${{ secrets.USER_TOKEN }}@github.com/${{ github.repository }}.git develop/$PATCH_VERSION-SNAPSHOT
#